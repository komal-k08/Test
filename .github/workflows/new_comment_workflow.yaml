name: Comment Artifacts on PR using Github script

on:
  workflow_run:
    workflows: [ "Upload Artifacts Complex Json" ]
    types: [ completed ]

permissions:
  pull-requests: write  # For commenting on PRs
  contents: read        # For accessing repo data if needed

concurrency:
  group: comment-${{ github.event.workflow_run.id }}
  cancel-in-progress: true

jobs:
  comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    steps:
      - name: Download workflow-info artifact
        uses: actions/github-script@v7
        id: download
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const runId = context.payload.workflow_run.id;

            // Fetch all artifacts for the workflow run
            const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });

            // Find the workflow-info artifact
            const matchArtifact = allArtifacts.data.artifacts.find(artifact => artifact.name === "workflow-info");
            if (!matchArtifact) {
              console.log("workflow-info artifact not found.");
              process.exit(1);
            }

            console.log("workflow-info Artifact Details:", JSON.stringify(matchArtifact, null, 2));

            // Download the artifact as a ZIP
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });

            // Write the ZIP file to disk
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/workflow-info.zip`, Buffer.from(download.data));
            console.log(`Downloaded workflow-info artifact (ID: ${matchArtifact.id})`);

      - name: Unzip workflow-info artifact
        run: |
          unzip -q workflow-info.zip -d ./workflow-info/
          rm workflow-info.zip

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // Read the workflow info
            const workflowInfo = JSON.parse(fs.readFileSync('./workflow-info/workflow-info.json', 'utf8'));
            const prNumber = workflowInfo.pr_number;

            if (!prNumber || prNumber === 'null') {
              console.log("No valid PR number found in workflow-info.json. Skipping.");
              return;
            }

            // Fetch and delete old comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number(prNumber),
            });
            const oldComments = comments.data.filter(comment => 
              comment.body.startsWith("âœ… Artifacts uploaded!")
            );
            for (const comment of oldComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
              });
              console.log(`Deleted old comment ID: ${comment.id}`);
            }

            // Build comment body from artifact list
            const commentBody = `âœ… Artifacts uploaded!\n` + 
              workflowInfo.artifacts.map(artifact => 
                `- ðŸ“„ [Download ${artifact.name}](${artifact.url})`
              ).join('\n');

            // Post the new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: Number(prNumber),
              body: commentBody
            });
            console.log("Posted new comment with artifact links.");