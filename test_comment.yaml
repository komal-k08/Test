name: Upload artifact with comment

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  update-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create dummy files
        run: |
          echo "This is test file 1" > ./quick-test-1.txt
          echo "This is test file 2" > ./quick-test-2.txt

      - name: Upload first artifact
        uses: actions/upload-artifact@v4
        id: artifact1
        with:
          name: quick-test-1
          path: ./quick-test-1.txt

      - name: Upload second artifact
        uses: actions/upload-artifact@v4
        id: artifact2
        with:
          name: quick-test-2
          path: ./quick-test-2.txt

      - name: Delete Old Comments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          COMMENTS=$(gh api repos/{owner}/{repo}/issues/$PR_NUMBER/comments --jq '.[] | select(.body | startswith("âœ… Artifacts uploaded!")) | .id')

          if [ -n "$COMMENTS" ]; then
            echo "Found old comments, deleting..."
            for COMMENT_ID in $COMMENTS; do
              gh api --method DELETE repos/{owner}/{repo}/issues/comments/$COMMENT_ID || exit 1
            done
          fi

      - name: Post Updated Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          ARTIFACT_URL_1="${{ steps.artifact1.outputs.artifact-url }}"
          ARTIFACT_URL_2="${{ steps.artifact2.outputs.artifact-url }}"

          COMMENT="âœ… Artifacts uploaded!  
          - ðŸ“„ [Download quick-test-1]($ARTIFACT_URL_1)  
          - ðŸ“„ [Download quick-test-2]($ARTIFACT_URL_2)"

          gh pr comment $PR_NUMBER --body "$COMMENT"
